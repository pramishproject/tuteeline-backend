version: "3.7"
services:
  web:
    container_name: core_app
    build: .
    restart: always
    env_file: .env
    ports:
      - "8000:8000"
    command: >
      sh -c " python manage.py makemigrations &&
          python manage.py migrate &&
          python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
    depends_on:
      - database
    networks:
      edu-network:

  database:
    image: postgres:13.0-alpine

    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root1234
      - POSTGRES_DB=tuteeline
      - POSTGRES_HOST=database
    networks:
      edu-network:
  redis:
    image: redis:alpine
    container_name: redis
  celery:
    restart: always
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    #    environment:
    #      - DB_HOST=db
    #      - DB_NAME=app
    #      - DB_USER=postgres
    #      - DB_PASS=supersecretpassword
    depends_on:
      - database
      - redis
      - web
#
#  celeryworker:
#
#    image: cmw_local_celeryworker
#    container_name: celeryworker
#    depends_on:
#      - redis
#      - postgres
#
#    ports: [ ]
#    command: /start-celeryworker
#
#  celerybeat:
#
#    image: cmw_local_celerybeat
#    container_name: celerybeat
#    depends_on:
#      - redis
#      - postgres
#
#    ports: [ ]
#    command: /start-celerybeat
#
#  flower:
#
#    image: cmw_local_flower
#    container_name: flower
#    ports:
#      - "5555:5555"
#    command: /start-flower
volumes:
  static_volume:
  postgres_data:
networks:
  edu-network:
    driver: bridge